// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

// AtA
Eigen::MatrixXd AtA(const Eigen::MatrixXd& x);
RcppExport SEXP _sptpsar_AtA(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Eigen::MatrixXd& >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(AtA(x));
    return rcpp_result_gen;
END_RCPP
}
// AAt
Eigen::MatrixXd AAt(const Eigen::MatrixXd& x);
RcppExport SEXP _sptpsar_AAt(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Eigen::MatrixXd& >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(AAt(x));
    return rcpp_result_gen;
END_RCPP
}
// lltA
Eigen::MatrixXd lltA(const Eigen::MatrixXd& x);
RcppExport SEXP _sptpsar_lltA(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Eigen::MatrixXd& >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(lltA(x));
    return rcpp_result_gen;
END_RCPP
}
// lltAinv
Eigen::MatrixXd lltAinv(const Eigen::MatrixXd& x);
RcppExport SEXP _sptpsar_lltAinv(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Eigen::MatrixXd& >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(lltAinv(x));
    return rcpp_result_gen;
END_RCPP
}
// detlltA
Rcpp::List detlltA(const Eigen::MatrixXd& x);
RcppExport SEXP _sptpsar_detlltA(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Eigen::MatrixXd& >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(detlltA(x));
    return rcpp_result_gen;
END_RCPP
}
// Ainv
Eigen::MatrixXd Ainv(const Eigen::MatrixXd& x);
RcppExport SEXP _sptpsar_Ainv(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Eigen::MatrixXd& >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(Ainv(x));
    return rcpp_result_gen;
END_RCPP
}
// AtAsp
Eigen::SparseMatrix<double> AtAsp(const Eigen::SparseMatrix<double>& x);
RcppExport SEXP _sptpsar_AtAsp(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Eigen::SparseMatrix<double>& >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(AtAsp(x));
    return rcpp_result_gen;
END_RCPP
}
// lltAsp
Eigen::SparseMatrix<double> lltAsp(const Eigen::SparseMatrix<double>& x);
RcppExport SEXP _sptpsar_lltAsp(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Eigen::SparseMatrix<double>& >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(lltAsp(x));
    return rcpp_result_gen;
END_RCPP
}
// detlltAsp
Rcpp::List detlltAsp(const Eigen::SparseMatrix<double>& x);
RcppExport SEXP _sptpsar_detlltAsp(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Eigen::SparseMatrix<double>& >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(detlltAsp(x));
    return rcpp_result_gen;
END_RCPP
}
// ldetluAsp
double ldetluAsp(const Eigen::SparseMatrix<double>& x);
RcppExport SEXP _sptpsar_ldetluAsp(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Eigen::SparseMatrix<double>& >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(ldetluAsp(x));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_sptpsar_AtA", (DL_FUNC) &_sptpsar_AtA, 1},
    {"_sptpsar_AAt", (DL_FUNC) &_sptpsar_AAt, 1},
    {"_sptpsar_lltA", (DL_FUNC) &_sptpsar_lltA, 1},
    {"_sptpsar_lltAinv", (DL_FUNC) &_sptpsar_lltAinv, 1},
    {"_sptpsar_detlltA", (DL_FUNC) &_sptpsar_detlltA, 1},
    {"_sptpsar_Ainv", (DL_FUNC) &_sptpsar_Ainv, 1},
    {"_sptpsar_AtAsp", (DL_FUNC) &_sptpsar_AtAsp, 1},
    {"_sptpsar_lltAsp", (DL_FUNC) &_sptpsar_lltAsp, 1},
    {"_sptpsar_detlltAsp", (DL_FUNC) &_sptpsar_detlltAsp, 1},
    {"_sptpsar_ldetluAsp", (DL_FUNC) &_sptpsar_ldetluAsp, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_sptpsar(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
